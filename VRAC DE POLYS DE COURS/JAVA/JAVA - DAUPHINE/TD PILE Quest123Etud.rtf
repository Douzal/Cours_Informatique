{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
\cocoascreenfonts1{\fonttbl\f0\fmodern\fcharset0 CourierNewPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;}
{\info
{\author M M}
{\*\company UP9}}\paperw12240\paperh15840\margl851\margr851\margb567\margt568\vieww14280\viewh16500\viewkind1\viewscale144
\deftab709
\pard\pardeftab709\ri0\qc\partightenfactor0

\f0\b\fs28 \cf2 CORRIGE TD PILE Quest. 1,2 & 3\
\pard\pardeftab709\ri0\partightenfactor0

\fs20 \cf2 \
package\cf0  tdr.td_pile.question123;\
\
public class Stack \{\
	private Maillon top;\
	public Stack() \{	\
	\}\
\
	public Stack(Object element)\{\
\
\pard\tx9923\pardeftab709\ri0\partightenfactor0
\cf0             Compl\'e9ter	??\
\pard\pardeftab709\ri0\partightenfactor0
\cf0 \
		\}\
	//m\'e9thode de r\'e9alisation, donc priv\'e9e mettant \'e0 jour la var. d'inst. top\
	?????? void setTop(Object top)\{								??\
\
		Compl\'e9ter											??\
\
		\}\
	//m\'e9thode de r\'e9alisation, donc priv\'e9e retournant la var. top\
	?????? Maillon getTop()\{									??\
		return top;\
		\}\
\
	public void push(Object element)\{\
		Maillon top = new Maillon(element, getTop());\
		setTop(top);\
		\}\
\
\pard\pardeftab709\li284\ri0\partightenfactor0
\cf0    /**\
   * si non vide\
   * recherche du contenu du premier maillon\
   * \'c8tablit le maillon suivant comme sommet de la pile\
   * @return\
   */\
\pard\pardeftab709\ri0\partightenfactor0
\cf0 	public Object pop()\{\
		if (isEmpty())\
			return null;\
		Object first=first();\
		setTop(next());\
		return first;\
		\}\
\
	// s\'e9mantique du sommet de la pile\
	// retourne l'\'e9l\'e9ment contenu dans la paire\
	// appelle la m\'e9thode de r\'e9alisation d'acc\'e0s au maillon\
\
	public Object first()\{\
		return getTop().getElement();\
		\}\
\
	//attention transtypage par rapport \'e0 Maillon\
	?????? Maillon  next()\{										??\
\
		Compl\'e9ter\
\
		\}\
\
	public boolean isEmpty()\{\
		return getTop()==null;\
		\}\
\
\pard\pardeftab709\li284\ri0\partightenfactor0
\cf0    \
   /* si vide alors retourne \{\}\
   *  sinon\
\pard\pardeftab709\li284\ri-519\partightenfactor0
\cf0    *  Invocation de la m\'e9thode toString() au maillon sommet\
   *  "getTop()"-> "getTop().toString()"\
\pard\pardeftab709\li284\ri0\partightenfactor0
\cf0    */\
\pard\pardeftab709\ri0\partightenfactor0
\cf0 \
	public String toString()\{\
		String result;\
		if (isEmpty())\{\
			result= "\{\}";\
			\} else\{\
				result= "\{"+ getTop();\
				\}\
		return result;\
		\}\
/*\
**********************************************\
   *** p.isEmpty() *** must be true :: true\
   *** \{titi, toto\} *** :: \{titi,toto \}\
   *** p.isEmpty() *** must be false :: false\
   *** \{3, titi, toto\} *** :: \{3,titi,toto \}\
   *** p.pop() *** must be : 3 :: 3\
   *** p.pop() *** must be : titi :: titi\
   *** \{toto\} :: \{toto \}\
   *** p.first() *** must be : toto :: toto\
   *** p *** must be : \{toto\} :: \{toto \}\
   *** p *** must be :  \{\} :: \{\}\
***********************************************\
*/\
\
	public static void main(String[] args) \{\
		Stack p= new Stack();\
		System.out.println("*** p.isEmpty() *** must be true :: "+ p.isEmpty());\
		p.push("toto");\
		p.push("titi");\
		System.out.println("*** \{titi, toto\} *** :: "+ p);\
		System.out.println("*** p.isEmpty() *** must be false :: "+ p.isEmpty());\
		p.push(3);\
		System.out.println("*** \{3, titi, toto\} *** :: "+ p);\
		System.out.println("*** p.pop() *** must be : 3 :: " + p.pop());\
		System.out.println("*** p.pop() *** must be : titi :: "+ p.pop());\
		System.out.println("*** \{toto\} :: "+ p);\
		System.out.println("*** p.first() *** must be : toto :: "+ p.first());\
		System.out.println("*** p *** must be : \{toto\} :: "+ p);\
		p.pop();\
		System.out.println("*** p *** must be :  \{\} :: "+ p);\
		\}\
	\}\
/**\
 * <p>Titre :classe Maillon  </p>\
 * <p>Description : r\'c8alise l'interface MaillonAbility\
 * - typage de next avec l'interface MaillonAbility\
 * - constructuer Maillon(Object element, MaillonAbility next)\
 *   prend en argument un objet de type MaillonAbility\
 * - idem pour setNext\
 */\
\
class Maillon \{\
      private Object element;\
      private Maillon next=null;\
\
      Maillon(Object element)\{\
          setElement(element);\
      \}\
\
      Maillon(Object element, Maillon next)\{\
\
		Compl\'e9ter											??\
    \
      \}\
\
      ?????? void setNext(Maillon next)\{								??\
          this.next = next;\
          \}\
\
      ?????? void setElement(Object element)\{							??\
          this.element= element;// "this.element" car ambiguit\'e9\
          \}\
\
      Object getElement()\{\
          return  this.element;\
          \}\
\
      Maillon next()\{\
          return next;\
          \}\
\
      boolean hasNext()\{\
          return next()!=null;\
          \}\
\
      ?????? String toString()\{									??\
          String result= "" + getElement();\
\
		Compl\'e9ter											??\
\
          return result;\
          \}\
      \}\
\
\
\
\
\
\
\pard\pardeftab709\ri0\sa200\partightenfactor0
\cf0 \
}